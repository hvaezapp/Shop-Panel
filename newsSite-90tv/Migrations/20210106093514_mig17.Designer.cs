// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using newsSite90tv.Models;
using System;

namespace newsSite90tv.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210106093514_mig17")]
    partial class mig17
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("newsSite90tv.Models.AdvertisePlanState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("adv_id");

                    b.Property<DateTime>("expiredateml");

                    b.Property<string>("expiredatesh");

                    b.Property<int>("plan_id");

                    b.Property<DateTime>("startdateml");

                    b.Property<string>("startdatesh");

                    b.HasKey("Id");

                    b.HasIndex("adv_id");

                    b.HasIndex("plan_id");

                    b.ToTable("Tbl_AdvertisePlanState");
                });

            modelBuilder.Entity("newsSite90tv.Models.ApplicationRoles", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.Property<string>("RoleLevel");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("newsSite90tv.Models.ApplicationUsers", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("BirthDayDate");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserImagePath");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.Property<byte>("gender");

                    b.Property<bool>("isEnable");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("newsSite90tv.Models.Appsetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("about");

                    b.Property<string>("email");

                    b.Property<bool>("isEnable");

                    b.Property<string>("ownername");

                    b.Property<string>("phone");

                    b.Property<string>("shabacode");

                    b.Property<string>("user_id");

                    b.Property<int>("wage");

                    b.HasKey("Id");

                    b.HasIndex("user_id");

                    b.ToTable("Tbl_Appsetting");
                });

            modelBuilder.Entity("newsSite90tv.Models.bannerImage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("banner_id");

                    b.Property<string>("image");

                    b.HasKey("Id");

                    b.HasIndex("banner_id");

                    b.ToTable("Tbl_BannerImage");
                });

            modelBuilder.Entity("newsSite90tv.Models.Buy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("buyer_id");

                    b.Property<int>("buyeradd_id");

                    b.Property<byte>("buystatus");

                    b.Property<int>("color_id");

                    b.Property<DateTime>("createdateml");

                    b.Property<string>("createdatesh");

                    b.Property<bool>("isenable");

                    b.Property<byte>("posttype");

                    b.Property<int>("price");

                    b.Property<long>("product_id");

                    b.Property<int>("qty");

                    b.Property<long>("shop_id");

                    b.Property<int>("totalprice");

                    b.HasKey("Id");

                    b.HasIndex("buyer_id");

                    b.HasIndex("buyeradd_id");

                    b.HasIndex("product_id");

                    b.HasIndex("shop_id");

                    b.ToTable("Tbl_Buy");
                });

            modelBuilder.Entity("newsSite90tv.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ParentId");

                    b.Property<string>("Title");

                    b.Property<DateTime>("datemiladi");

                    b.Property<string>("dateshamsi");

                    b.Property<string>("image");

                    b.Property<bool>("isenable");

                    b.Property<byte>("type");

                    b.HasKey("Id");

                    b.ToTable("Tbl_Category");
                });

            modelBuilder.Entity("newsSite90tv.Models.Checkout", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("bank_id");

                    b.Property<int>("checkoutprice");

                    b.Property<DateTime>("datemiladi");

                    b.Property<string>("dateshamsi");

                    b.Property<long>("seller_id");

                    b.Property<long>("shop_id");

                    b.HasKey("Id");

                    b.HasIndex("seller_id");

                    b.HasIndex("shop_id");

                    b.ToTable("Tbl_Checkout");
                });

            modelBuilder.Entity("newsSite90tv.Models.CheckoutRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("bank_id");

                    b.Property<DateTime>("dateMiladi");

                    b.Property<string>("dateShamsi");

                    b.Property<int>("requestprice");

                    b.Property<long>("seller_id");

                    b.Property<long>("shop_id");

                    b.Property<byte>("status");

                    b.HasKey("Id");

                    b.HasIndex("bank_id");

                    b.HasIndex("seller_id");

                    b.HasIndex("shop_id");

                    b.ToTable("Tbl_CheckoutRequest");
                });

            modelBuilder.Entity("newsSite90tv.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ostan_id");

                    b.Property<string>("title");

                    b.HasKey("Id");

                    b.HasIndex("ostan_id");

                    b.ToTable("Tbl_City");
                });

            modelBuilder.Entity("newsSite90tv.Models.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("code");

                    b.Property<bool>("isenable");

                    b.Property<string>("name");

                    b.Property<string>("nameen");

                    b.HasKey("Id");

                    b.ToTable("Tbl_Color");
                });

            modelBuilder.Entity("newsSite90tv.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("appuser_id");

                    b.Property<string>("body");

                    b.Property<DateTime>("dateMiladi");

                    b.Property<string>("dateShamsi");

                    b.Property<bool>("isEnable");

                    b.Property<long>("product_id");

                    b.Property<int>("replyto");

                    b.Property<byte>("status");

                    b.HasKey("Id");

                    b.HasIndex("appuser_id");

                    b.HasIndex("product_id");

                    b.ToTable("Tbl_comment");
                });

            modelBuilder.Entity("newsSite90tv.Models.ErrorReportProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("appuser_id");

                    b.Property<DateTime>("dateMiladi");

                    b.Property<string>("dateShamsi");

                    b.Property<bool>("isenable");

                    b.Property<string>("message");

                    b.Property<long>("product_id");

                    b.Property<int>("reason_id");

                    b.Property<byte>("status");

                    b.HasKey("Id");

                    b.HasIndex("appuser_id");

                    b.HasIndex("product_id");

                    b.HasIndex("reason_id");

                    b.ToTable("Tbl_ErrorReportProduct");
                });

            modelBuilder.Entity("newsSite90tv.Models.ErrorReportReason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("isenable");

                    b.Property<string>("title");

                    b.Property<byte>("type");

                    b.HasKey("Id");

                    b.ToTable("Tbl_ErrorReportReason");
                });

            modelBuilder.Entity("newsSite90tv.Models.ErrorReportShop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("appuser_id");

                    b.Property<DateTime>("dateMiladi");

                    b.Property<string>("dateShamsi");

                    b.Property<bool>("isenable");

                    b.Property<string>("message");

                    b.Property<int>("reason_id");

                    b.Property<long>("shop_id");

                    b.Property<byte>("status");

                    b.HasKey("Id");

                    b.HasIndex("appuser_id");

                    b.HasIndex("reason_id");

                    b.HasIndex("shop_id");

                    b.ToTable("Tbl_ErrorReportShop");
                });

            modelBuilder.Entity("newsSite90tv.Models.FileManager", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("path");

                    b.HasKey("Id");

                    b.ToTable("Tbl_filemanager");
                });

            modelBuilder.Entity("newsSite90tv.Models.FollowShop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("dateMiladi");

                    b.Property<string>("dateShamsi");

                    b.Property<bool>("isenable");

                    b.Property<long>("shop_id");

                    b.Property<string>("time");

                    b.Property<long>("userapp_id");

                    b.Property<string>("usertoken");

                    b.HasKey("Id");

                    b.HasIndex("shop_id");

                    b.HasIndex("userapp_id");

                    b.ToTable("Tbl_FollowShop");
                });

            modelBuilder.Entity("newsSite90tv.Models.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("appuser_id");

                    b.Property<string>("codeorder");

                    b.Property<DateTime>("datemiladi");

                    b.Property<string>("dateshamsi");

                    b.Property<DateTime>("finishdatemiladi");

                    b.Property<string>("finishdateshamsi");

                    b.Property<bool>("isEnable");

                    b.Property<bool>("isfinish");

                    b.Property<int>("postprice");

                    b.Property<byte>("posttype");

                    b.Property<int>("sumprice");

                    b.Property<int>("useradd_id");

                    b.HasKey("Id");

                    b.HasIndex("appuser_id");

                    b.ToTable("Tbl_Order");
                });

            modelBuilder.Entity("newsSite90tv.Models.orderDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("color_id");

                    b.Property<bool>("isenable");

                    b.Property<long>("order_id");

                    b.Property<int>("price");

                    b.Property<long>("product_id");

                    b.Property<int>("qty");

                    b.Property<long>("shop_id");

                    b.Property<int>("totalprice");

                    b.HasKey("Id");

                    b.HasIndex("order_id");

                    b.HasIndex("product_id");

                    b.HasIndex("shop_id");

                    b.ToTable("Tbl_orderdetail");
                });

            modelBuilder.Entity("newsSite90tv.Models.Ostan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("title");

                    b.HasKey("Id");

                    b.ToTable("Tbl_Ostans");
                });

            modelBuilder.Entity("newsSite90tv.Models.Part", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("isenable");

                    b.Property<string>("key");

                    b.HasKey("Id");

                    b.ToTable("Tbl_PropertyPart");
                });

            modelBuilder.Entity("newsSite90tv.Models.payment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("amount");

                    b.Property<long>("appuser_id");

                    b.Property<string>("comment");

                    b.Property<DateTime>("datemiladi");

                    b.Property<string>("dateshamsi");

                    b.Property<bool>("isSuccess");

                    b.Property<bool>("isenable");

                    b.Property<long>("order_id");

                    b.Property<string>("refid");

                    b.HasKey("Id");

                    b.HasIndex("appuser_id");

                    b.ToTable("Tbl_payment");
                });

            modelBuilder.Entity("newsSite90tv.Models.Plan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<byte>("count");

                    b.Property<DateTime>("dateMiladi");

                    b.Property<string>("dateShamsi");

                    b.Property<string>("desc");

                    b.Property<bool>("isEnable");

                    b.Property<string>("nameen");

                    b.Property<string>("namefa");

                    b.Property<int>("offpercent");

                    b.Property<byte>("plantype");

                    b.Property<int>("price");

                    b.Property<byte>("type");

                    b.HasKey("Id");

                    b.ToTable("Tbl_Plan");
                });

            modelBuilder.Entity("newsSite90tv.Models.ProdProp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("product_id");

                    b.Property<int>("property_id");

                    b.Property<string>("value");

                    b.HasKey("Id");

                    b.HasIndex("product_id");

                    b.HasIndex("property_id");

                    b.ToTable("Tbl_ProductProperty");
                });

            modelBuilder.Entity("newsSite90tv.Models.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("User_id");

                    b.Property<int>("brand_id");

                    b.Property<int>("cat_id");

                    b.Property<string>("code");

                    b.Property<bool>("createstate");

                    b.Property<DateTime>("dateMiladi");

                    b.Property<string>("dateShamsi");

                    b.Property<string>("desc");

                    b.Property<bool>("enable");

                    b.Property<string>("image");

                    b.Property<bool>("ismultisell");

                    b.Property<int>("likeCount");

                    b.Property<byte>("status");

                    b.Property<string>("summary");

                    b.Property<string>("title");

                    b.Property<int>("viewCount");

                    b.Property<int>("weight");

                    b.HasKey("Id");

                    b.HasIndex("User_id");

                    b.HasIndex("brand_id");

                    b.HasIndex("cat_id");

                    b.ToTable("Tbl_Products");
                });

            modelBuilder.Entity("newsSite90tv.Models.ProductBrand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("isenable");

                    b.Property<string>("name");

                    b.Property<string>("nameen");

                    b.HasKey("Id");

                    b.ToTable("Tbl_Brand");
                });

            modelBuilder.Entity("newsSite90tv.Models.ProductColor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("color_id");

                    b.Property<bool>("isEnable");

                    b.Property<long>("product_id");

                    b.Property<long>("shop_id");

                    b.HasKey("Id");

                    b.HasIndex("color_id");

                    b.HasIndex("product_id");

                    b.HasIndex("shop_id");

                    b.ToTable("Tbl_ProductColor");
                });

            modelBuilder.Entity("newsSite90tv.Models.ProductFav", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("appuser_id");

                    b.Property<long>("product_id");

                    b.HasKey("Id");

                    b.ToTable("Tbl_Favorite");
                });

            modelBuilder.Entity("newsSite90tv.Models.ProductGallary", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("imagepath");

                    b.Property<long>("product_id");

                    b.HasKey("Id");

                    b.HasIndex("product_id");

                    b.ToTable("Tbl_ProductGallary");
                });

            modelBuilder.Entity("newsSite90tv.Models.ProductSeller", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("dateMiladi");

                    b.Property<string>("dateShamsi");

                    b.Property<bool>("isEnable");

                    b.Property<bool>("isExist");

                    b.Property<bool>("ismainseller");

                    b.Property<byte>("offpercent");

                    b.Property<long>("price");

                    b.Property<byte>("productType");

                    b.Property<long>("product_id");

                    b.Property<byte>("qty");

                    b.Property<long>("seller_id");

                    b.Property<long>("shop_id");

                    b.Property<byte>("status");

                    b.HasKey("Id");

                    b.HasIndex("product_id");

                    b.HasIndex("seller_id");

                    b.HasIndex("shop_id");

                    b.ToTable("Tbl_ProductSeller");
                });

            modelBuilder.Entity("newsSite90tv.Models.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("cat_id");

                    b.Property<bool>("isenable");

                    b.Property<string>("name");

                    b.Property<int>("part_id");

                    b.HasKey("Id");

                    b.HasIndex("cat_id");

                    b.HasIndex("part_id");

                    b.ToTable("Tbl_Property");
                });

            modelBuilder.Entity("newsSite90tv.Models.Salsman", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("appuser_id");

                    b.Property<DateTime>("dateMiladi");

                    b.Property<string>("dateShamsi");

                    b.Property<bool>("isEnable");

                    b.Property<byte>("status");

                    b.Property<string>("user_id");

                    b.HasKey("Id");

                    b.HasIndex("appuser_id");

                    b.HasIndex("user_id");

                    b.ToTable("Tbl_Salsman");
                });

            modelBuilder.Entity("newsSite90tv.Models.Sell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("buy_id");

                    b.Property<DateTime>("createdateml");

                    b.Property<string>("createdatesh");

                    b.Property<bool>("isenable");

                    b.Property<int>("price");

                    b.Property<long>("product_id");

                    b.Property<int>("qty");

                    b.Property<int>("removableprice");

                    b.Property<long>("seller_id");

                    b.Property<byte>("sellstatus");

                    b.Property<long>("shop_id");

                    b.Property<int>("totalprice");

                    b.Property<int>("totalsellprice");

                    b.HasKey("Id");

                    b.HasIndex("buy_id");

                    b.HasIndex("product_id");

                    b.HasIndex("seller_id");

                    b.HasIndex("shop_id");

                    b.ToTable("Tbl_Sell");
                });

            modelBuilder.Entity("newsSite90tv.Models.sellerBank", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BankNom");

                    b.Property<string>("bankname");

                    b.Property<DateTime>("dateMiladi");

                    b.Property<string>("dateShamsi");

                    b.Property<bool>("isenable");

                    b.Property<string>("owner");

                    b.Property<long>("seller_id");

                    b.Property<string>("shabNom");

                    b.Property<byte>("status");

                    b.Property<string>("user_id");

                    b.HasKey("Id");

                    b.HasIndex("seller_id");

                    b.HasIndex("user_id");

                    b.ToTable("Tbl_sellerBank");
                });

            modelBuilder.Entity("newsSite90tv.Models.Shop", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("address");

                    b.Property<int>("cat_id");

                    b.Property<int>("city_id");

                    b.Property<DateTime>("dateMiladi");

                    b.Property<string>("dateShamsi");

                    b.Property<bool>("enable");

                    b.Property<string>("image");

                    b.Property<string>("lat");

                    b.Property<string>("lot");

                    b.Property<int>("ostan_id");

                    b.Property<long>("seller_id");

                    b.Property<byte>("status");

                    b.Property<string>("summary");

                    b.Property<string>("title");

                    b.Property<string>("user_id");

                    b.Property<int>("viewCount");

                    b.HasKey("Id");

                    b.HasIndex("cat_id");

                    b.HasIndex("city_id");

                    b.HasIndex("ostan_id");

                    b.HasIndex("seller_id");

                    b.HasIndex("user_id");

                    b.ToTable("Tbl_Shop");
                });

            modelBuilder.Entity("newsSite90tv.Models.shopadvertise", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("appuser_id");

                    b.Property<DateTime>("dateMiladi");

                    b.Property<string>("dateShamsi");

                    b.Property<DateTime>("fromdatemiladi");

                    b.Property<string>("fromdateshamsi");

                    b.Property<string>("image");

                    b.Property<bool>("isenable");

                    b.Property<long>("shop_id");

                    b.Property<byte>("status");

                    b.Property<DateTime>("todatemiladi");

                    b.Property<string>("todateshamsi");

                    b.Property<string>("users_id");

                    b.HasKey("Id");

                    b.HasIndex("shop_id");

                    b.HasIndex("users_id");

                    b.ToTable("Tbl_ShopAdvertise");
                });

            modelBuilder.Entity("newsSite90tv.Models.shopcomments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsEnable");

                    b.Property<long>("appuser_id");

                    b.Property<string>("body");

                    b.Property<DateTime>("dateMiladi");

                    b.Property<string>("dateShamsi");

                    b.Property<int>("replyto");

                    b.Property<long>("shop_id");

                    b.Property<byte>("status");

                    b.HasKey("Id");

                    b.HasIndex("appuser_id");

                    b.HasIndex("shop_id");

                    b.ToTable("Tbl_ShopComment");
                });

            modelBuilder.Entity("newsSite90tv.Models.ShopPlanState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("expiredateml");

                    b.Property<string>("expiredatesh");

                    b.Property<int>("plan_id");

                    b.Property<long>("shop_id");

                    b.Property<DateTime>("startdateml");

                    b.Property<string>("startdatesh");

                    b.HasKey("Id");

                    b.HasIndex("plan_id");

                    b.HasIndex("shop_id");

                    b.ToTable("Tbl_ShopPlanState");
                });

            modelBuilder.Entity("newsSite90tv.Models.UserAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("address");

                    b.Property<long>("appuser_id");

                    b.Property<int>("city_id");

                    b.Property<DateTime>("datemiladi");

                    b.Property<string>("dateshamsi");

                    b.Property<bool>("isActive");

                    b.Property<bool>("isenable");

                    b.Property<string>("lat");

                    b.Property<string>("lot");

                    b.Property<string>("mobile");

                    b.Property<string>("name");

                    b.Property<int>("ostan_id");

                    b.Property<string>("phone");

                    b.Property<string>("postalcode");

                    b.HasKey("Id");

                    b.HasIndex("appuser_id");

                    b.HasIndex("city_id");

                    b.HasIndex("ostan_id");

                    b.ToTable("Tbl_Useraddress");
                });

            modelBuilder.Entity("newsSite90tv.Models.UserAlarm", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("appuser_id");

                    b.Property<string>("body");

                    b.Property<DateTime>("dateMiladi");

                    b.Property<string>("dateShamsi");

                    b.Property<bool>("isenable");

                    b.Property<byte>("status");

                    b.Property<string>("title");

                    b.HasKey("Id");

                    b.HasIndex("appuser_id");

                    b.ToTable("Tbl_UserAlarm");
                });

            modelBuilder.Entity("newsSite90tv.Models.UserApp", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("User_id");

                    b.Property<string>("birthdate");

                    b.Property<DateTime>("datemiladi");

                    b.Property<string>("dateshamsi");

                    b.Property<string>("email");

                    b.Property<string>("firstName");

                    b.Property<byte>("gender");

                    b.Property<string>("image");

                    b.Property<bool>("isEnable");

                    b.Property<string>("lastName");

                    b.Property<string>("mobile");

                    b.Property<string>("mobileActiveCode");

                    b.Property<bool>("mobileActiveStatus");

                    b.Property<string>("nationalcode");

                    b.Property<string>("phone");

                    b.Property<string>("token");

                    b.Property<byte>("type");

                    b.HasKey("Id");

                    b.HasIndex("User_id");

                    b.ToTable("Tbl_UserApp");
                });

            modelBuilder.Entity("newsSite90tv.Models.workerBanner", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("appuser_id");

                    b.Property<int>("category_id");

                    b.Property<int>("city_id");

                    b.Property<DateTime>("dateMiladi");

                    b.Property<string>("dateShamsi");

                    b.Property<string>("desc");

                    b.Property<bool>("isenable");

                    b.Property<byte>("status");

                    b.Property<string>("title");

                    b.Property<DateTime>("todate");

                    b.Property<int>("viewcount");

                    b.HasKey("Id");

                    b.HasIndex("appuser_id");

                    b.HasIndex("category_id");

                    b.HasIndex("city_id");

                    b.ToTable("Tbl_Banner");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("newsSite90tv.Models.ApplicationRoles")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("newsSite90tv.Models.ApplicationUsers")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("newsSite90tv.Models.ApplicationUsers")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("newsSite90tv.Models.ApplicationRoles")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("newsSite90tv.Models.ApplicationUsers")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("newsSite90tv.Models.ApplicationUsers")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("newsSite90tv.Models.AdvertisePlanState", b =>
                {
                    b.HasOne("newsSite90tv.Models.shopadvertise", "Tbl_Shopadv")
                        .WithMany()
                        .HasForeignKey("adv_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("newsSite90tv.Models.Plan", "Tbl_Plan")
                        .WithMany()
                        .HasForeignKey("plan_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("newsSite90tv.Models.Appsetting", b =>
                {
                    b.HasOne("newsSite90tv.Models.ApplicationUsers", "user")
                        .WithMany()
                        .HasForeignKey("user_id");
                });

            modelBuilder.Entity("newsSite90tv.Models.bannerImage", b =>
                {
                    b.HasOne("newsSite90tv.Models.workerBanner", "Tbl_WorkerBanner")
                        .WithMany()
                        .HasForeignKey("banner_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("newsSite90tv.Models.Buy", b =>
                {
                    b.HasOne("newsSite90tv.Models.UserApp", "Tbl_UserApp")
                        .WithMany()
                        .HasForeignKey("buyer_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("newsSite90tv.Models.UserAddress", "Tbl_UserAddress")
                        .WithMany()
                        .HasForeignKey("buyeradd_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("newsSite90tv.Models.Product", "Tbl_Product")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("newsSite90tv.Models.Shop", "Tbl_Shop")
                        .WithMany()
                        .HasForeignKey("shop_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("newsSite90tv.Models.Checkout", b =>
                {
                    b.HasOne("newsSite90tv.Models.Salsman", "Tbl_Salsman")
                        .WithMany()
                        .HasForeignKey("seller_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("newsSite90tv.Models.Shop", "Tbl_Shop")
                        .WithMany()
                        .HasForeignKey("shop_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("newsSite90tv.Models.CheckoutRequest", b =>
                {
                    b.HasOne("newsSite90tv.Models.sellerBank", "Tbl_sellerbank")
                        .WithMany()
                        .HasForeignKey("bank_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("newsSite90tv.Models.Salsman", "Tbl_Salsman")
                        .WithMany()
                        .HasForeignKey("seller_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("newsSite90tv.Models.Shop", "Tbl_Shop")
                        .WithMany()
                        .HasForeignKey("shop_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("newsSite90tv.Models.City", b =>
                {
                    b.HasOne("newsSite90tv.Models.Ostan", "Tblostan")
                        .WithMany()
                        .HasForeignKey("ostan_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("newsSite90tv.Models.Comment", b =>
                {
                    b.HasOne("newsSite90tv.Models.UserApp", "Tbl_UserApp")
                        .WithMany()
                        .HasForeignKey("appuser_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("newsSite90tv.Models.Product", "Tbl_Products")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("newsSite90tv.Models.ErrorReportProduct", b =>
                {
                    b.HasOne("newsSite90tv.Models.UserApp", "Tbl_UserApp")
                        .WithMany()
                        .HasForeignKey("appuser_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("newsSite90tv.Models.Product", "Tbl_product")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("newsSite90tv.Models.ErrorReportReason", "Tbl_Reason")
                        .WithMany()
                        .HasForeignKey("reason_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("newsSite90tv.Models.ErrorReportShop", b =>
                {
                    b.HasOne("newsSite90tv.Models.UserApp", "Tbl_UserApp")
                        .WithMany()
                        .HasForeignKey("appuser_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("newsSite90tv.Models.ErrorReportReason", "Tbl_Reason")
                        .WithMany()
                        .HasForeignKey("reason_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("newsSite90tv.Models.Shop", "Tbl_Shop")
                        .WithMany()
                        .HasForeignKey("shop_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("newsSite90tv.Models.FollowShop", b =>
                {
                    b.HasOne("newsSite90tv.Models.Shop", "shop")
                        .WithMany()
                        .HasForeignKey("shop_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("newsSite90tv.Models.UserApp", "TblUserApp")
                        .WithMany()
                        .HasForeignKey("userapp_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("newsSite90tv.Models.Order", b =>
                {
                    b.HasOne("newsSite90tv.Models.UserApp", "Tbl_UserApp")
                        .WithMany()
                        .HasForeignKey("appuser_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("newsSite90tv.Models.orderDetail", b =>
                {
                    b.HasOne("newsSite90tv.Models.Order", "Tbl_Order")
                        .WithMany()
                        .HasForeignKey("order_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("newsSite90tv.Models.Product", "Tbl_Product")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("newsSite90tv.Models.Shop", "Tbl_Shop")
                        .WithMany()
                        .HasForeignKey("shop_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("newsSite90tv.Models.payment", b =>
                {
                    b.HasOne("newsSite90tv.Models.UserApp", "Tbl_UserApp")
                        .WithMany()
                        .HasForeignKey("appuser_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("newsSite90tv.Models.ProdProp", b =>
                {
                    b.HasOne("newsSite90tv.Models.Product", "Tbl_Product")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("newsSite90tv.Models.Property", "Tbl_Property")
                        .WithMany()
                        .HasForeignKey("property_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("newsSite90tv.Models.Product", b =>
                {
                    b.HasOne("newsSite90tv.Models.ApplicationUsers", "user")
                        .WithMany()
                        .HasForeignKey("User_id");

                    b.HasOne("newsSite90tv.Models.ProductBrand", "brand")
                        .WithMany()
                        .HasForeignKey("brand_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("newsSite90tv.Models.Category", "Tbl_Category")
                        .WithMany()
                        .HasForeignKey("cat_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("newsSite90tv.Models.ProductColor", b =>
                {
                    b.HasOne("newsSite90tv.Models.Color", "Tbl_color")
                        .WithMany()
                        .HasForeignKey("color_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("newsSite90tv.Models.Product", "Tbl_Product")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("newsSite90tv.Models.Shop", "Tbl_Shop")
                        .WithMany()
                        .HasForeignKey("shop_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("newsSite90tv.Models.ProductGallary", b =>
                {
                    b.HasOne("newsSite90tv.Models.Product", "product")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("newsSite90tv.Models.ProductSeller", b =>
                {
                    b.HasOne("newsSite90tv.Models.Product", "Tbl_Product")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("newsSite90tv.Models.Salsman", "Tbl_Salsman")
                        .WithMany()
                        .HasForeignKey("seller_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("newsSite90tv.Models.Shop", "Tbl_Shop")
                        .WithMany()
                        .HasForeignKey("shop_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("newsSite90tv.Models.Property", b =>
                {
                    b.HasOne("newsSite90tv.Models.Category", "Tbl_Category")
                        .WithMany()
                        .HasForeignKey("cat_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("newsSite90tv.Models.Part", "Tbl_Part")
                        .WithMany()
                        .HasForeignKey("part_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("newsSite90tv.Models.Salsman", b =>
                {
                    b.HasOne("newsSite90tv.Models.UserApp", "Tbl_Userapp")
                        .WithMany()
                        .HasForeignKey("appuser_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("newsSite90tv.Models.ApplicationUsers", "user")
                        .WithMany()
                        .HasForeignKey("user_id");
                });

            modelBuilder.Entity("newsSite90tv.Models.Sell", b =>
                {
                    b.HasOne("newsSite90tv.Models.Buy", "Tbl_Buy")
                        .WithMany()
                        .HasForeignKey("buy_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("newsSite90tv.Models.Product", "Tbl_Product")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("newsSite90tv.Models.Salsman", "Tbl_Salsman")
                        .WithMany()
                        .HasForeignKey("seller_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("newsSite90tv.Models.Shop", "Tbl_Shop")
                        .WithMany()
                        .HasForeignKey("shop_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("newsSite90tv.Models.sellerBank", b =>
                {
                    b.HasOne("newsSite90tv.Models.Salsman", "Tbl_Salsman")
                        .WithMany()
                        .HasForeignKey("seller_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("newsSite90tv.Models.ApplicationUsers", "Tbl_User")
                        .WithMany()
                        .HasForeignKey("user_id");
                });

            modelBuilder.Entity("newsSite90tv.Models.Shop", b =>
                {
                    b.HasOne("newsSite90tv.Models.Category", "Tbl_Category")
                        .WithMany()
                        .HasForeignKey("cat_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("newsSite90tv.Models.City", "Tblcity")
                        .WithMany()
                        .HasForeignKey("city_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("newsSite90tv.Models.Ostan", "Tblostan")
                        .WithMany()
                        .HasForeignKey("ostan_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("newsSite90tv.Models.Salsman", "salsman")
                        .WithMany()
                        .HasForeignKey("seller_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("newsSite90tv.Models.ApplicationUsers", "user")
                        .WithMany()
                        .HasForeignKey("user_id");
                });

            modelBuilder.Entity("newsSite90tv.Models.shopadvertise", b =>
                {
                    b.HasOne("newsSite90tv.Models.Shop", "Shop")
                        .WithMany()
                        .HasForeignKey("shop_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("newsSite90tv.Models.ApplicationUsers", "User")
                        .WithMany()
                        .HasForeignKey("users_id");
                });

            modelBuilder.Entity("newsSite90tv.Models.shopcomments", b =>
                {
                    b.HasOne("newsSite90tv.Models.UserApp", "Tbl_UserApp")
                        .WithMany()
                        .HasForeignKey("appuser_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("newsSite90tv.Models.Shop", "Tbl_Shop")
                        .WithMany()
                        .HasForeignKey("shop_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("newsSite90tv.Models.ShopPlanState", b =>
                {
                    b.HasOne("newsSite90tv.Models.Plan", "Tbl_Plan")
                        .WithMany()
                        .HasForeignKey("plan_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("newsSite90tv.Models.Shop", "Tbl_Shop")
                        .WithMany()
                        .HasForeignKey("shop_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("newsSite90tv.Models.UserAddress", b =>
                {
                    b.HasOne("newsSite90tv.Models.UserApp", "Tbl_Userapp")
                        .WithMany()
                        .HasForeignKey("appuser_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("newsSite90tv.Models.City", "Tbl_city")
                        .WithMany()
                        .HasForeignKey("city_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("newsSite90tv.Models.Ostan", "Tbl_ostan")
                        .WithMany()
                        .HasForeignKey("ostan_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("newsSite90tv.Models.UserAlarm", b =>
                {
                    b.HasOne("newsSite90tv.Models.UserApp", "Tbl_Userapp")
                        .WithMany()
                        .HasForeignKey("appuser_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("newsSite90tv.Models.UserApp", b =>
                {
                    b.HasOne("newsSite90tv.Models.ApplicationUsers", "user")
                        .WithMany()
                        .HasForeignKey("User_id");
                });

            modelBuilder.Entity("newsSite90tv.Models.workerBanner", b =>
                {
                    b.HasOne("newsSite90tv.Models.UserApp", "Tbl_UserApp")
                        .WithMany()
                        .HasForeignKey("appuser_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("newsSite90tv.Models.Category", "Tbl_Category")
                        .WithMany()
                        .HasForeignKey("category_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("newsSite90tv.Models.City", "Tbl_City")
                        .WithMany()
                        .HasForeignKey("city_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
