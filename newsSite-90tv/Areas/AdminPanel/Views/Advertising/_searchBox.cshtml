
@using ShopPanel.PublicClass


@{
    Layout = null;
}

<style>
    #searchtyps {
        width: 400px;
        margin: auto;
    }

    select {
        margin-top: 10px;
    }


    .autocomplete {
        /*the container must be positioned relative:*/
        position: relative;
    }

    #value {
        margin-top: 5px;
    }



    .autocomplete-items {
        position: absolute;
        border: 1px solid #d4d4d4;
        border-bottom: none;
        border-top: none;
        z-index: 99;
        /*position the autocomplete items to be the same width as the container:*/
        top: 100%;
        left: 80px;
        right: 80px;
        
    }

        .autocomplete-items div {
            padding: 10px;
            cursor: pointer;
            background-color: #fff;
            border-bottom: 1px solid #d4d4d4;
        }

            .autocomplete-items div:hover {
                /*when hovering an item:*/
                background-color: #dce1e6;
            }

    .autocomplete-active {
        /*when navigating through the items using the arrow keys:*/
        background-color: DodgerBlue !important;
        color: #ffffff;
    }

</style>

<form asp-controller="Advertising" asp-action="searchResult" method="get">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h4 class="modal-title">جستجو تبلیغات</h4>
    </div>

    <div class="modal-body form-horizontal">



        @*<div class="form-group">
            <select class="form-control" name="o" id="searchtyps">
                <optgroup label=" نوع جستجو خود را انتحاب کنید"></optgroup>

                <option value="0">
                    براساس عنوان فروشگاه
                </option>
               
            </select>


        </div>*@

        <div class="form-group" style="width:400px;margin:auto">
            <input type="text" class="form-control" required name="q" placeholder="عنوان فروشگاه را وارد کنید" id="key" />
        </div>

        <div id="context" class="form-group" style="width:400px;margin:auto">

        </div>

    </div>


    <div class="modal-footer" style="text-align:left;">
        <button class="btn btn-default" type="button" data-dismiss="modal">برگشت</button>
        <button class="btn btn-success" type="submit">بگرد</button>
    </div>
</form>



<script>
    function autocomplete(inp, arr) {
            /*the autocomplete function takes two arguments,
            the text field element and an array of possible autocompleted values:*/
            var currentFocus;
            /*execute a function when someone writes in the text field:*/
            inp.addEventListener("input", function (e) {
                var a, b, i, val = this.value;
                /*close any already open lists of autocompleted values*/
                closeAllLists();
                if (!val) { return false; }
                currentFocus = -1;
                /*create a DIV element that will contain the items (values):*/
                a = document.createElement("DIV");
                a.setAttribute("id", this.id + "autocomplete-list");
                a.setAttribute("class", "autocomplete-items");

                /*append the DIV element as a child of the autocomplete container:*/
                this.parentNode.appendChild(a);
                /*for each item in the array...*/
                for (i = 0; i < arr.length; i++) {
                    /*check if the item starts with the same letters as the text field value:*/
                    if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {
                        /*create a DIV element for each matching element:*/
                        b = document.createElement("DIV");
                        /*make the matching letters bold:*/
                        b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
                        b.innerHTML += arr[i].substr(val.length);
                        /*insert a input field that will hold the current array item's value:*/
                        b.innerHTML += "<input type='hidden' value='" + arr[i]+"'>";
                        /*execute a function when someone clicks on the item value (DIV element):*/
                        b.addEventListener("click", function (e) {
                            
                            /*insert the value for the autocomplete text field:*/
                            inp.value = this.getElementsByTagName("input")[0].value;
                            /*close the list of autocompleted values,
                            (or any other open lists of autocompleted values:*/
                            closeAllLists();
                        });
                        a.appendChild(b);
                    }
                }
            });
            /*execute a function presses a key on the keyboard:*/
            inp.addEventListener("keydown", function (e) {
                var x = document.getElementById(this.id + "autocomplete-list");
                if (x) x = x.getElementsByTagName("div");
                if (e.keyCode == 40) {
                    /*If the arrow DOWN key is pressed,
                    increase the currentFocus variable:*/
                    currentFocus++;
                    /*and and make the current item more visible:*/
                    addActive(x);
                } else if (e.keyCode == 38) { //up
                    /*If the arrow UP key is pressed,
                    decrease the currentFocus variable:*/
                    currentFocus--;
                    /*and and make the current item more visible:*/
                    addActive(x);
                } else if (e.keyCode == 13) {
                    /*If the ENTER key is pressed, prevent the form from being submitted,*/
                    e.preventDefault();
                    if (currentFocus > -1) {
                        /*and simulate a click on the "active" item:*/
                        if (x) x[currentFocus].click();
                    }
                }
            });
            function addActive(x) {
                /*a function to classify an item as "active":*/
                if (!x) return false;
                /*start by removing the "active" class on all items:*/
                removeActive(x);
                if (currentFocus >= x.length) currentFocus = 0;
                if (currentFocus < 0) currentFocus = (x.length - 1);
                /*add class "autocomplete-active":*/
                x[currentFocus].classList.add("autocomplete-active");
            }
            function removeActive(x) {
                /*a function to remove the "active" class from all autocomplete items:*/
                for (var i = 0; i < x.length; i++) {
                    x[i].classList.remove("autocomplete-active");
                }
            }
            function closeAllLists(elmnt) {
                /*close all autocomplete lists in the document,
                except the one passed as an argument:*/
                var x = document.getElementsByClassName("autocomplete-items");
                for (var i = 0; i < x.length; i++)
                {
                    if (elmnt != x[i] && elmnt != inp) {
                        x[i].parentNode.removeChild(x[i]);
                    }
                }
            }
            /*execute a function when someone clicks in the document:*/
            document.addEventListener("click", function (e) {
                closeAllLists(e.target);
            });
        }

        var shops = [];
    getShop();

    console.log(shops);

        autocomplete(document.getElementById('key'), shops);

       function getShop() {
            $.ajax({

                url: "@Url.Action("allshops", "Shop" , new { area ="AdminPanel"})",
                type: "Post",
                dataType: "Json",

                success: function (data)
                {
                   
                    for (var i = 0; i < data.length; i++)
                    {
                        shops.push(data[i].title);
                    }

                },
                error: function (er) {
                    alert(er);
                }

            })
        }


</script>


@*<script>

    $('#searchtyps').change(function () {


        $('#key').removeAttr('placeholder');
        var val = $(this).val();




        if (val == 0) {

            $('#key').val('');
            //$('#jobtags').remove();
            //$('#jobcats').remove();
            //$('#jobtypes').remove();

            fade(["context"]);

            $('#key').show();
            $('#key').attr("placeholder", "عنوان فروشگاه وارد کنید");

        } else if (val == 1) {

            //$('#key').hide();
            //$('#jobtags').remove();
            //$('#jobtypes').remove();

            fade(["key", "jobtags","jobtypes"]);
            setcat();



            //cats
        } else if (val == 2) {
            //tags
            //$('#key').hide();
            //$('#jobcats').remove();
            //$('#jobtypes').remove();

            fade(["key", "jobcats","jobtypes"]);
            settags();


        } else {
            //types
            //$('#key').hide();
            //$('#jobcats').remove();
            //$('#jobtags').remove();
            fade(["key", "jobcats", "jobtags"]);
            settypes();
        }



    })

    function fade(idarr)
    {
       
        for (var i = 0; i < idarr.length; i++) {
            $("#"+idarr[i]).hide();
        }
    }


    function settypes()
    {
        let el = "<select id='jobtypes' onchange='jobtypechanged()'  class='form-control circleInput'>" +
            "<option value = '0' > فروش</option >" +
            "<option value='1'>خرید</option>" +
            "</select>";


        $('#context').html(el);
        $('#key').val('0');
    }


    function settags()
    {
        var el = "<select id='jobtags' onchange='jobtagchanged()'  class='form-control circleInput'>" +
            "<option value='0' class='text-light text-bold'>عادی</option>" +
            "<option value='1' class='text-info text-bold'>فوری</option>" +
            "<option value='2' class='text-warning text-bold'>برجسته</option>" +
            "</select>";


        $('#context').html(el);
        $('#key').val('0');

    }


    function jobtagchanged() {
        let val = $('#jobtags').val();
        $('#key').val(val);
    }

    function jobtypechanged() {
        let val = $('#jobtypes').val();
        $('#key').val(val);
    }


    function setcat() {
        $.ajax({

            url: "@Url.Action("getjobcat", "Category",new { area="AdminPanel" })",
            type: "Post",
            dataType: "Json",

            success: function (res)
            {

                var cats = res;
               
                if (cats.length !=0) {
                    var sel = document.createElement('select');

                    sel.setAttribute("id", "jobcats");
                    sel.addEventListener('change' , jobcatchanged)
                    sel.setAttribute("class", "form-control");

                    var opg = "<optgroup label='دسته بندی  مورد نظر را انتحاب کنید'></optgroup>";
                    sel.innerHTML = opg;



                    for (var i = 0; i < cats.length; i++) {


                        var op = document.createElement('option');
                        op.setAttribute("value", cats[i].Id);
                        op.innerHTML = cats[i].Title;

                        sel.appendChild(op);
                    }


                    $('#context').append(sel);

                    $('#key').val($('#jobcats option:first').val());


                }

            }, error: function (er) {
                alert(er.message);

            }


        })





        function jobcatchanged() {

            let val = $('#jobcats').val();
            $('#key').val(val);
        }
    }
</script>*@